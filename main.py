from fastapi import FastAPI, HTTPException
from pydantic import BaseModel, EmailStr
import os, requests

# Read the SendGrid API key and From address from environment variables.
SENDGRID_API_KEY = os.environ["SENDGRID_API_KEY"]
FROM_EMAIL = os.environ.get("FROM_EMAIL", "no-reply@whitecoat.app")
SENDGRID_URL = "https://api.sendgrid.com/v3/mail/send"

app = FastAPI(title="Whitecoat Mail Service")

class ResetPayload(BaseModel):
    username: str
    email: EmailStr
    code: str  # 6-digit numeric code generated by the desktop app

@app.get("/health")
def health():
    return {"ok": True}

@app.post("/send-reset")
def send_reset(p: ResetPayload):
    subject = "Whitecoat Password Reset Code"
    body = (
        f"Hello {p.username},\n\n"
        f"Your one-time reset code is: {p.code}\n"
        "This code expires in 15 minutes.\n\n"
        "Return to the app and choose Step 2 to finish resetting your password."
    )
    data = {
        "personalizations": [{"to": [{"email": p.email}], "subject": subject}],
        "from": {"email": FROM_EMAIL, "name": "Whitecoat Support"},
        "content": [{"type": "text/plain", "value": body}],
    }
    r = requests.post(
        SENDGRID_URL, json=data,
        headers={"Authorization": f"Bearer {SENDGRID_API_KEY}", "Content-Type": "application/json"},
        timeout=10
    )
    if r.status_code >= 300:
        raise HTTPException(status_code=502, detail=f"SendGrid error: {r.text}")
    return {"ok": True}
